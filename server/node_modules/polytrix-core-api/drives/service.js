//
//	Service.js
//	This is the standard class and wrapper for all drive services
//

var Service = function(serviceProvider){
	this.provider = serviceProvider;
};

//	
//	@method getAuthURL
//	@return{string} authorization_url
//
Service.prototype.getAuthURL = function(){
	return this.provider.getAuthURL();
};

//
//	@method getToken
//	@params{string} code
//	@return-promise-value{
//		driveid: String,
//		expires_on: Date,
//		access_token: String,
//		refresh_token: String (null for dropbox)
//	} result
//
Service.prototype.getToken = function(code){
	return this.provider.getToken(code);
};

//
//	@method renewToken
//	@params{string} refresh_token
//	@return-promise-value{oAuthData} renewToken		please refer to return type of getToken() method.
//
Service.prototype.renewToken = function(refresh_token){
	return this.provider.renewToken(refresh_token);
};

//	
//	@method getFileIndex
//	@params{string} location
//	@params{string} access_token
//	@params{string} refresh_token
//	@return-promise-value: {
//		"total_items":null,
//		"content":[
//			{
//				"is_file":true,
//				"is_folder":false,
//				"etag":"157b1a04db6a",
//				"identifier":"/._AST10303-Tut09.doc",
//				"parent_identifier":"",
//				"created_date":"2013-11-24T06:27:00.000Z",
//				"modified_date":"2013-11-24T06:27:00.000Z",
//				"name":"._AST10303-Tut09.doc",
//				"description":"",
//				"checksum":null,
//				"file_size":4096,
//				"_raw":{...}
//			}
//		]
//	} fileIndex
//
Service.prototype.getFileIndex = function(location,access_token,refresh_token){
	return this.provider.getFileIndex(location,access_token,refresh_token);
};

//	
//	@method downloadFile
//	@params{string} location
//	@params{string} access_token
//	@params{string} refresh_token
//	@return-promise-value: {
//			success: Boolean,
//			file: Buffer,
//			contentType: String,
//			contentLength: String,
//			contentDisposition: String
//		} file
//
Service.prototype.downloadFile = function(location,access_token,refresh_token){
	return this.provider.downloadFile(location,access_token,refresh_token);
};

//	
//	@method downloadFilePipe
//	@params{string} location
//	@params{string} access_token
//	@params{string} refresh_token
//	@params{response} res
//	@return{promise}
//
Service.prototype.downloadFilePipe = function(location,access_token,refresh_token,res){
	return this.provider.downloadFilePipe(location,access_token,refresh_token,res);
};

//	
//	@method downloadFileLink
//	@params{string} location
//	@params{string} access_token
//	@params{string} refresh_token
//	@return-promise-value: {string} download_url
//
Service.prototype.downloadFileLink = function(location,access_token,refresh_token){
	return this.provider.downloadFileLink(location,access_token,refresh_token);
};



module.exports = Service; 