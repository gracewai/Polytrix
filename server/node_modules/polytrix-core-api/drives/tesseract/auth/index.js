var config = require('../../config').tesseract;
var request = require('request');
var Q = require('q');



module.exports.createUser = function(username){
	return authenticator('GET',config.apiKey,config.domain + '/user/create/',{qs:{username:username}});
};

module.exports.authUrl = function(){
};

module.exports.getToken = function(userid){
	var options = {
		qs: {'userId': userid, 'scope': 'all'}
	};
	return authenticator('GET',config.apiKey,config.domain + '/user/auth/',options)
        .then(function(results)
        {
            console.log('result: ',results);

            var _return = {
                driveid: 'tesseract',
                access_token: results.access_token,
                refresh_token: results.refresh_token
            };
            var now = new Date();
            now.setTime(now.getTime() + results.expire_in * 1000);//1000 for millisecond
            _return.expires_on = now;
            return _return;
        })
        .catch(function(err){
            console.log('error :',err);
            return err;
        });
};

module.exports.renewToken = function(refresh_token){
	var options = {
		qs: {'refresh_token': refresh_token}
	};
	return authenticator('POST', config.apiKey, config.domain + '/user/auth/', options)
};

var authenticator = function(method,api_key,api_url,options){
	options = options || {};
	options.url = api_url;
	options.expectedStatus = options.expectedStatus || 200;
	options.headers = options.headers || {};
	options.headers.Authorization = "API " + api_key;
    options.rejectUnauthorized = false;
	
	return Q.Promise(function(resolve,reject,notify){
		options.method = method.toUpperCase();
		request(
			options,
			function(error,response,body){
				if(!error){
					if(response.statusCode == options.expectedStatus){
                        if(response.headers['content-type'].search('application/json') !== -1 && typeof body === 'string'){
                            body = JSON.parse(body);
                        }
						resolve(body);
					}else{
						console.log('response.statusCode: ' + response.statusCode);
						if(typeof body === 'string'){
							body = JSON.parse(body);
						}
						body.status = response.statusCode;
						console.log(body);
						reject(body);
					}
				}else{
					reject(error);
				}
			}
		);
	});
};