var Q = require('q');
var authenticator = require('../authenticator');
var config = require('../../config').tesseract;
// operation
//	create(access_token,refresh_token,destinationFileId,is_folder,filename)
//	rename(access_token,refersh_token,fileId,newName)
//	move(access_token,refresh_token,fileId,destinationFileId)
//	copy(access_token,refresh_token,fileId,destinationFileId)
//	delete(access_token,refresh_token,fileId)

module.exports.create = function(access_token,refresh_token,destinationFileId,is_folder,filename){
	if(!is_folder){
		return createBlankFile(access_token,destinationFileId,filename);
	}else{
		return createFolder(access_token,destinationFileId,filename);
	}
};

function createBlankFile(access_token,destinationFileId,filename){
	//TODO
	var url= config.domain + '/vault/file/new/' + filename;
	return authenticator.put(access_token,url,{qs:{destinationId:destinationFileId}})
	.then(function(body){
		return transform(JSON.parse(body));
	})
	.catch(function(err){
		return transformError(err);
	});
}
// {"source": "https://bv7pda.bn1301.livefilestore.com/y2mAJpmUmCW445s3kyX8yUWWnpsGtikH0PfI6xrbLYKv54AshbnkuP8GgebygEyif79YPXAwGQ-a_9bV-NIbQtGLjFxXApcRZyMzqfZj4K}wQgFIs6xYsBgNyoadFzS0bZxtwkk4GTTaZcNpDYR9RoN-A/testing.txt?download&psid=1"}

function createFolder(access_token,destinationFileId,foldername){
	var url = config.domain + '/vault/file/new/' + foldername;
	return authenticator.post(access_token,url,{
        qs:{destinationId:destinationFileId}
	},true)
	.then(function(body){
		return transform(body);
	})
	.catch(function(err){
		return transformError(err);
	});
}

module.exports.rename = function(access_token,refresh_token,fileId,newName){
	var url = config.domain + '/vault/file/' + fileId;
	return authenticator('PATCH',access_token,url,{
		json:{
            metadata:{
                name:newName
            }
        }
	},true)
	.then(function(body){
		return transform(body);
	})
	.catch(function(err){
		return transformError(err);
	});
};

module.exports.move = function(access_token,refresh_token,fileId,destinationFileId){
	var url = config.domain + '/vault/file/' + fileId;
	return authenticator('MOVE',access_token,url,{
		qs:{
			destinationId: destinationFileId
		}
	},true)
	.then(function(body){
		return transform(body);
	})
	.catch(function(err){
		return transformError(err);
	});

};

module.exports.copy = function(access_token,refresh_token,fileId,destinationFileId){
	var url = config.domain + '/vault/file/' + fileId;
	return authenticator('COPY',access_token,url,{
		qs:{
			destinationId: destinationFileId
		}
	},true)
	.then(function(body){
		return transform(body);
	})
	.catch(function(err){
		return transformError(err);
	});
};

module.exports.delete = function(access_token,refresh_token,fileId){
	var url = config.domain + '/vault/file/' + fileId;
	return authenticator.delete(access_token,url)
	.then(function(response){
            console.log(response);
        response.success = true;
		return response;
	})
	.catch(function(err){
		return transformError(err);
	});
};

function transform(body){
	var data = {
		success:true,
		identifier:body.identifier,
		name:body.name,
		_raw:body
	};
	return data;
}

function transformError(err){
	console.log(err);
	var result = {
		success: false,
		error_code: err.status,
		msg: err.message
	};
	return result;
}