var config = require('../../config').onedrive;
var filefog = require('../filefog');
var Q = require('q');


module.exports.authUrl = function(){
	return filefog.provider.oAuthGetAuthorizeUrl();
};

module.exports.getToken = function(code){
	return filefog.provider.oAuthGetAccessToken(code)
	.then(function(results)
	{
		console.log(results);
		return {
			driveid: 'od' + results.user_id,
			expires_on: results.expires_on, /*new Date(results.expires_on)*/
			access_token: results.access_token,
			refresh_token: results.refresh_token
		};
	})
	.catch(function(err){
		console.log(err);
		return err;
	});	
};

module.exports.renewToken = function(refresh_token){
	return filefog.provider.oAuthRefreshAccessToken({refresh_token:refresh_token})
	.then(function(newOAuthData){
		return newOAuthData;
	})
	.catch(function(err){
		console.log('core api onedrive renewToken() error');
		console.log(err);
		return err;
	});
};






filefog.provider.oAuthGetAccessToken = function(code){
	return Q.Promise(function(resolve,reject){
		request.post(
			'https://login.live.com/oauth20_token.srf',
			{
				form: {
					code: code,
					grant_type: 'authorization_code',
					client_id: config.client_key,
					client_secret: config.client_secret,
					redirect_uri: config.redirect_url
				},
				rejectUnauthorized: false,	// bypass CERT_UNTRUSTED error
				requestCert: true			//
			},
			function (error, response, body) {
				if(error)
					reject(error);
				else if (response.statusCode !== 200) {
					reject(new Error("response status not 200, statusCode:" + response.statusCode));
				}else{
					body = JSON.parse(body);

					var now = new Date();
					now.setTime(now.getTime() + body.expires_in * 1000);//1000 for millisecond
					body.expires_on = now;
					resolve(body);
				}
			}
		);
	});
};