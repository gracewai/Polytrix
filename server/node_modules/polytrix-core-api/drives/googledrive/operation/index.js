var Q = require('q');
var mime = require('mime');
var authenticator = require('../authenticator');
var transform = require('filefog-google').transform;
// operation
//	create(access_token,refresh_token,destinationFileId,is_folder,filename)
//	rename(access_token,refersh_token,fileId,newName)
//	move(access_token,refresh_token,fileId,destinationFileId)
//	copy(access_token,refresh_token,fileId,destinationFileId)
//	delete(access_token,refresh_token,fileId)

module.exports.create = function(access_token,refresh_token,destinationFileId,is_folder,filename){
	if(!is_folder){
		return createBlankFile(access_token,destinationFileId,filename);
	}else{
		return createFolder(access_token,destinationFileId,filename);
	}
};

function createBlankFile(access_token,destinationFileId,filename){
	var url = 'https://www.googleapis.com/upload/drive/v2/files';
	return authenticator.post(access_token,url,{
		qs:{
			uploadType:'multipart'
		},
		multipart:[
			{
				'content-type': 'application/json',
				body: JSON.stringify({
					"title":filename,
					"parents":[{"id":destinationFileId}],
					mimeType: mime.lookup(filename)
				})
			},
			{
				'content-type': mime.lookup(filename),
				body: ''
			}
		]
	})
	.then(function(body){
		return transform.getFileInformation(JSON.parse(body));
	}).then(function(body){
		body.success = true;
		return body;
	})
	.catch(function(err){
		return transformError(err);
	});
}

function createFolder(access_token,destinationFileId,foldername){
	var url = 'https://www.googleapis.com/drive/v2/files';
	return authenticator.post(access_token,url,{
		json:{
			title: foldername,
			parents: [{"id":destinationFileId}],
			mimeType: "application/vnd.google-apps.folder"
		}
	})
	.then(function(body){
		return transform.getFileInformation(body);
	})
	.then(function(body){
		body.success = true;
		return body;
	})
	.catch(function(err){
		return transformError(err);
	});
}

module.exports.rename = function(access_token,refresh_token,fileId,newName){
	var url = 'https://www.googleapis.com/drive/v2/files/' + fileId;
	return authenticator.patch(access_token,url,{
		json:{
			title:newName
		}
	})
	.then(function(body){
		return transform.getFileInformation(body);
	})
	.then(function(body){
		body.success = true;
		return body;
	})
	.catch(function(err){
		return transformError(err);
	});
};

module.exports.move = function(access_token,refresh_token,fileId,destinationFileId){
	var url = 'https://www.googleapis.com/drive/v2/files/' + fileId;
	return authenticator.patch(access_token,url,{
		json:{
			parents : [{ 'id': destinationFileId }]
		}
	})
	.then(function(body){
		return transform.getFileInformation(body);
	})
	.then(function(body){
		body.success = true;
		return body;
	})
	.catch(function(err){
		return transformError(err);
	});
};

module.exports.copy = function(access_token,refresh_token,fileId,destinationFileId){
	var url = 'https://www.googleapis.com/drive/v2/files/' + fileId + '/copy';
	return authenticator.post(access_token,url,{
		json:{
			parents : [{ 'id': destinationFileId }]
		}
	})
	.then(function(body){
		return transform.getFileInformation(body);
	})
	.then(function(body){
		body.success = true;
		return body;
	})
	.catch(function(err){
		return transformError(err);
	});
};

module.exports.delete = function(access_token,refresh_token,fileId){
	var url = 'https://www.googleapis.com/drive/v2/files/' + fileId;
	return authenticator.delete(access_token,url,{expectedStatus: 204})
	.then(function(response){
		return {success:true};
	})
	.catch(function(err){
		return transformError(err);
	});
};

function transformError(err){
	console.log(err);
	var result = {
		success: false,
		error_code: err.code,
		msg: err.code==404 ? '404 file not found' : err.message
	};
	return result;
}