var services = require('./main');
var Q = require('q');
var should = require('should');
var fs = require('fs');
var
	dropbox = services.dropbox.client(
		/*access_token:*/ 'r2YJWpOcVrcAAAAAAAABqolIXozKMwwGuKxHd_3y7pxWIfmjySfDLWC60Hvx99UZ',
		/*refresh_token:*/ null
		),
	googledrive = services.googledrive.client(
		/*access_token:*/ 'ya29.GwHFNZrmrfE7jbaec8nI5sOQEyxp_MmgPjCPtA15uvAXiqIzegr1Nbb3cRolyfUTKsD0oavQpj6eww',
		/*refresh_token:*/ '1/2c_pwihU1zEibKmM88Gecdzr76liR49ly58NG4ALDnV90RDknAdJa_sgfheVM0XT'
		),
	onedrive = services.onedrive.client(
		/*access_token:*/ 'EwBwAq1DBAAUGCCXc8wU/zFu9QnLdZXy+YnElFkAAZtpHjlRhESazMRXKsH0s3T1pO9oWLVyzvgGQVRZ336GN07Sdue4n5fdV+kCmGbG6Z8b+U+tNsNiYs/UB1oiaXU24tNSOroEt5t0qHjFrQ9IUPUrnuHNBq0pviJyA9iVbgZVR+2v3Ql82gFKo3lGkq4EardyL+h+UD/jyc1GrWN+SiKPtLPMQLkL1ZZbuXZF9P5sYQ+ugww4XTSJb56DQVPpnZCx5wughePS6rsxWqaGK/YcQolFvEBJUWdOvgETzegfyABif9ydc2HAm8ySNZ71AqVRMa5l5xfYfxWU0nWAIwO/0DUWAV/1GGC42PmVDCamVmPmUcz8u5i44mT8MyADZgAACJPLJTts82lsQAEVLVLAW3DrbJEHdOVaCPQ61GwaY5D6A0J0lScTckztkx7qtxF+29YPyV82nVV25iNre/UpCMHtoUy7tglL0hGVyKQ4qfjx29SkrU4hYBLuFvZIBrTJ6CmGeOzw/kibfCcNOEIRVpCaM8CFy86rSJPVuKK7IStUtz5qee+U+v1498eSh/3fE0XDp4klNo8Jiowqf+hnpPQ8qNeaOceRJlcIaviFGfVMqjPEpgX6MRp/uHNOsq/YZw/rXMxk34XPTP6u4t13RLEZ6LoOTKOh3bwVF95K8MiuwjszRn80//oNG9LQt0A0mJKj+jg5rZejTr+Rvd+iAAk5YZuyPWcZKlvg8JzNjdCuoeDByjRCfdHyO+kj2RQli8ssejlhuBOmDQ6j9w20Q0vUPKIX8WeetEAmVJisyQX5EJs5CjNUyW6l71gB',
		/*refresh_token:*/ 'Ci47bzKOB7VTCC7bfx5umNngVUZwsMiCOsHkvAQnYfn4BuRHWqhrcv!aHd8qIsJ722M8vLWhzBPXvODWuYH!hpwNPX8sEHYKAKd5XK2hzP!6ysewFmSNwkqUZli8li!nIx6T*Rl!DP6gpQ5eu5pGKyqaNcI5Ah6l7KkvEd0Q3CjqF2Qqg9JDYCcLhYHB1xpEPLPUj1PlSjPbmkhSjQTlXuCsap4GV3ncUizhhUKlLiGxCHrmnCGe8IV17DNfLH4!IWm6x88XfoTIHYuYR01g8ecfyX0AMeuA113OGxLQmw3Y8YKLRAcP7N0r!BR2bw3somLVIY2Eg8pwUK4W0CjCFs72eUN8dOHj5n82FO0O2quaq6WXFRSTgFKnnGw3jo2HsLHsUfnObLc1q*yI0s30v*s$'
		),
	tesseract = services.tesseract.client(
		/*access_token*/ 'abuWw06dof/g60QJjGv+ltMC61w=',
		/*refresh_token*/ 'c125ae82663d13d24d2276e031abceeeb217459445c7c196e646996d8e2effc20d52eae075df5f1d'
		)
;

function print(promise){
	return promise.then(function(result){
		console.log(result);
	}).done();
}

describe('',function(){
	this.timeout(4000);
describe('Refresh Token', function() {
	describe('using dropbox',function(){
		it('should not return token',function(done){
			dropbox.auth.renewToken().then(function(renewData){
				renewData.should.not.have.property('access_token');
			}).then(done,done);
		});
	});

	describe('using onedrive',function(){
		it('should return a token',function(done){
			onedrive.auth.renewToken().then(function(renewData){
				renewData.should.have.property('access_token');
				if(renewData && !renewData.access_token){
					console.log(renewData);
				}
			}).then(done,done);
		});
	});

	describe('using google drive',function(){
		it('should return a token',function(done){
			googledrive.auth.renewToken().then(function(renewData){
				renewData.should.have.property('access_token');
			}).then(done,done);
		});
	});
});

describe.skip('Account Info', function() {
	describe('using dropbox',function(){
		it('should return transformed data',function(done){
			dropbox.info.accountInfo().then(function(data){
				data.should.be.ok;
				data.should.have.property('name');
				data.should.have.property('email');
				data.should.have.property('avatar_url');
				data.should.have.property('created_date');
				data.should.have.property('modified_date');
				data.should.have.property('id');
				data.should.have.property('_raw');
			}).then(done,done);
		});
	});

	describe('using onedrive',function(){
		it('should return transformed data',function(done){
			onedrive.info.accountInfo().then(function(data){
				data.should.be.ok;
				data.should.have.property('name');
				data.should.have.property('email');
				data.should.have.property('avatar_url');
				data.should.have.property('created_date');
				data.should.have.property('modified_date');
				data.should.have.property('id');
				data.should.have.property('_raw');
			}).then(done,done);
		});
	});

	describe('using google drive',function(){
		it('should return transformed data',function(done){
			googledrive.info.accountInfo().then(function(data){
				data.should.be.ok;
				data.should.have.property('name');
				data.should.have.property('email');
				data.should.have.property('avatar_url');
				data.should.have.property('created_date');
				data.should.have.property('modified_date');
				data.should.have.property('id');
				data.should.have.property('_raw');
			}).then(done,done);
		});
	});
});

describe.skip('Usage Qouta', function() {
	describe('using dropbox',function(){
		it('should return transformed data',function(done){
			dropbox.info.usageQouta().then(function(data){
				data.should.be.ok;
				data.should.have.property('total_bytes');
				data.should.have.property('used_bytes');
				data.should.have.property('_raw');
			}).then(done,done);
		});
	});

	describe('using onedrive',function(){
		it('should return transformed data',function(done){
			onedrive.info.usageQouta().then(function(data){
				data.should.be.ok;
				data.should.have.property('total_bytes');
				data.should.have.property('used_bytes');
				data.should.have.property('_raw');
			}).then(done,done);
		});
	});

	describe('using google drive',function(){
		it('should return transformed data',function(done){
			googledrive.info.usageQouta().then(function(data){
				data.should.be.ok;
				data.should.have.property('total_bytes');
				data.should.have.property('used_bytes');
				data.should.have.property('_raw');
			}).then(done,done);
		});
	});
});

describe.skip('Listing file of',function(){
	describe('root folder with empty id',function(){
		describe('using dropbox',function(){
			it('should return a transformed data',function(done){
				dropbox.metadata.listFile().then(function(data){
					data.should.be.ok;
					data.should.have.property('content');
					data.content.should.be.array;
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a transformed data',function(done){
				onedrive.metadata.listFile().then(function(data){
					data.should.be.ok;
					data.should.have.property('content');
					data.content.should.be.array;
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a transformed data',function(done){
				googledrive.metadata.listFile().then(function(data){
					data.should.be.ok;
					data.should.have.property('content');
					data.content.should.be.array;
				}).then(done,done);
			});
		});
	});

	describe('folder with id',function(){
		describe('using dropbox',function(){
			it('should return a transformed data',function(done){
				dropbox.metadata.listFile('/c++').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.should.have.property('content');
					data.content.should.be.array;
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a transformed data',function(done){
				onedrive.metadata.listFile('folder.e0de0102ecb2448c.E0DE0102ECB2448C!106').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.should.have.property('content');
					data.content.should.be.array;
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a transformed data',function(done){
				googledrive.metadata.listFile('0AOc3nh6wFb5CUk9PVA').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.should.have.property('content');
					data.content.should.be.array;
				}).then(done,done);
			});
		});
	});

	describe('not exist folder',function(){
		describe('using dropbox',function(){
			it('should return a 404 error',function(done){
				dropbox.metadata.listFile('dfrdhttr').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(404);
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a 400 error (unsupport id)',function(done){
				onedrive.metadata.listFile('dfrdhttr').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(400);
				}).then(done,done);
			});
			it('should return a 404 error (non exist id)',function(done){
				onedrive.metadata.listFile('folder.e0de0102ecb2448c.E0DE0002ECB2448C!106').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(404);
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a 404 error',function(done){
				googledrive.metadata.listFile('dfrdhttr').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(404);
				}).then(done,done);
			});
		});
	});
});

describe.skip('Getting metadata of',function(){
	describe('root folder with empty id',function(){
		describe('using dropbox',function(){
			it('should return a transformed data',function(done){
				dropbox.metadata.get().then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(false);
					data.is_folder.should.equal(true);
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a transformed data',function(done){
				onedrive.metadata.get().then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(false);
					data.is_folder.should.equal(true);
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a transformed data',function(done){
				googledrive.metadata.get().then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(false);
					data.is_folder.should.equal(true);
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
	});

	describe('folder with id',function(){
		describe('using dropbox',function(){
			it('should return a transformed data',function(done){
				dropbox.metadata.get('/c++').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(false);
					data.is_folder.should.equal(true);
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a transformed data',function(done){
				onedrive.metadata.get('folder.e0de0102ecb2448c.E0DE0102ECB2448C!106').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(false);
					data.is_folder.should.equal(true);
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a transformed data',function(done){
				googledrive.metadata.get('0AOc3nh6wFb5CUk9PVA').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(false);
					data.is_folder.should.equal(true);
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
	});

	describe('file with id',function(){
		describe('using dropbox',function(){
			it('should return a transformed data',function(done){
				dropbox.metadata.get('/CTNET.jpg').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(true);
					data.is_folder.should.equal(false);
					//data.etag.should.be.ok;
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a transformed data',function(done){
				onedrive.metadata.get('file.e0de0102ecb2448c.E0DE0102ECB2448C!572').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(true);
					data.is_folder.should.equal(false);
					//data.etag.should.be.ok;
					data.should.have.property('etag');
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a transformed data',function(done){
				googledrive.metadata.get('0B-c3nh6wFb5Ccm56Ui15Z3RWTlk').then(function(data){
					data.should.be.ok;
					data.success.should.equal(true);
					data.is_file.should.equal(true);
					data.is_folder.should.equal(false);
					//data.etag.should.be.ok;
					data.should.have.property('identifier');
					data.should.have.property('parent_identifier');
					data.should.have.property('created_date');
					data.should.have.property('modified_date');
					data.should.have.property('name');
					data.should.have.property('description');
					data.should.have.property('_raw');
				}).then(done,done);
			});
		});
	});

	describe('not exist file',function(){
		describe('using dropbox',function(){
			it('should return a 404 error',function(done){
				dropbox.metadata.get('/tafidje').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(404);
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return a 404 error',function(done){
				onedrive.metadata.get('file.e0de0102ecb2448c.E0DE0002ECB2448C!572').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(404);
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return a 404 error',function(done){
				googledrive.metadata.get('0B-c3nh6wFbsdf556Ui15Z3RWTlk').then(function(data){
					data.should.be.ok;
					data.success.should.equal(false);
					data.error_code.should.equal(404);
				}).then(done,done);
			});
		});
	});

});

// operation
//	create(access_token,refresh_token,destinationFileId,...(filename,etc.))
//	rename(access_token,refersh_token,fileId,...(filename,etc.))
//	move(access_token,refresh_token,fileId,destinationFileId)
//	copy(access_token,refresh_token,fileId,destinationFileId)
//	delete(access_token,refresh_token,fileId)
describe.skip('Create', function() {
	describe.skip('file',function(){
		describe('using dropbox',function(){
			it('should return success response',function(done){
				dropbox.operation.create('/c++',false,'testing' + Math.random() + '.txt')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return success response',function(done){
				onedrive.operation.create('folder.e0de0102ecb2448c',false,'testing' + Math.random() + '.txt')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return success response',function(done){
				googledrive.operation.create('0AOc3nh6wFb5CUk9PVA',false,'testing' + Math.random() + '.txt')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});

	describe.skip('folder',function(){
		describe('using dropbox',function(){
			it('should return success response',function(done){
				dropbox.operation.create('/c++',true,'testing' + Math.random())
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should return success response',function(done){
				onedrive.operation.create('folder.e0de0102ecb2448c',true,'testing' + Math.random())
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe('using google drive',function(){
			it('should return success response',function(done){
				googledrive.operation.create('0AOc3nh6wFb5CUk9PVA',true,'testing' + Math.random())
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});
	
	describe.skip('existing file',function(){
		describe('using dropbox',function(){
			it('should not overwrite file',function(done){
				dropbox.operation.create('/c++',false,'testing0.6356611009687185.txt')
				.then(function(response){
					response.name.should.not.equal('testing0.6356611009687185.txt');
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe('using onedrive',function(){
			it('should not overwrite file',function(done){
				onedrive.operation.create('folder.e0de0102ecb2448c',false,'testing0.46085197501815856.txt')
				.then(function(response){
					response.name.should.not.equal('testing0.46085197501815856.txt');
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});
});

describe('Rename', function() {
	describe('file',function(){
		describe.skip('using dropbox',function(){
			it('should rename a file',function(done){
				dropbox.operation.rename('/c++/testing0.6356611009687185.txt','testingMytestsetest.txt')
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});


		describe.skip('using one drive',function(){
			it('should rename a file',function(done){
				onedrive.operation.rename('file.e0de0102ecb2448c.E0DE0102ECB2448C!760','testingMytestsetest.txt')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('using google drive',function(){
			it('should rename a file',function(done){
				googledrive.operation.rename('0B-c3nh6wFb5CRnVfdGNmSjh3bTQ','testingMytestsetest.txt')//testing0.895550828659907
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});

	describe('folder',function(){
		describe.skip('using dropbox',function(){
			it('should rename a file',function(done){
				dropbox.operation.rename('/c++/Test','testetst')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

	});
});

describe.skip('Move', function() {
	describe('file',function(){
		describe.skip('using dropbox',function(){
			it('should moved to other folder',function(done){
				dropbox.operation.move('/c++/testing0.6356611009687185.txt','/c++/Test')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('using onedrive',function(){
			it('should moved to other folder',function(done){
				onedrive.operation.move('file.e0de0102ecb2448c.E0DE0102ECB2448C!760','folder.e0de0102ecb2448c.E0DE0102ECB2448C!593')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('using google drive',function(){
			it('should moved to other folder',function(done){
				googledrive.operation.move('0B-c3nh6wFb5CRnVfdGNmSjh3bTQ','0B-c3nh6wFb5CWVVYTUhMM2VpMFU')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});
});

var dropbox_id;
var onedrive_id;
var googledrive_id;

describe.skip('Copy', function() {
	describe('file',function(){
		describe('using dropbox',function(){
			it('should copy to other folder',function(done){
				dropbox.operation.copy('/c++/testing0.6356611009687185.txt','/c++/Test')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;

					dropbox_id = response.identifier;
				}).then(done,done);
			});
		});

		describe('using onedrive',function(){
			it('should copy to other folder',function(done){
				onedrive.operation.copy('file.e0de0102ecb2448c.E0DE0102ECB2448C!760','folder.e0de0102ecb2448c.E0DE0102ECB2448C!593')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;

					onedrive_id = response.identifier;
				}).then(done,done);
			});
		});

		describe('using google drive',function(){
			it('should copy to other folder',function(done){
				googledrive.operation.copy('0B-c3nh6wFb5CRnVfdGNmSjh3bTQ','0B-c3nh6wFb5CWVVYTUhMM2VpMFU')
				.then(function(response){
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;

					googledrive_id = response.identifier;
				}).then(done,done);
			});
		});
	});
});

describe.skip('Delete', function() {
	describe('file',function(){
		describe('using dropbox',function(){
			it('should deleted the file',function(done){
				dropbox.operation.delete(dropbox_id)
				.then(function(response){
					response.success.should.equal(true);
				}).then(done,done);
			});
		});

		describe('using onedrive',function(){
			it('should deleted the file',function(done){
				onedrive.operation.delete(onedrive_id)
				.then(function(response){
					response.success.should.equal(true);
				}).then(done,done);
			});
		});

		describe('using google drive',function(){
			it('should deleted the file',function(done){
				googledrive.operation.delete(googledrive_id)
				.then(function(response){
					response.success.should.equal(true);
				}).then(done,done);
			});
		});
	});
});

describe('Stream', function() {
	this.timeout(10000);

	describe.skip('using dropbox',function(){
		describe.skip('create and upload file',function(){
			it('should upload a file and return success', function(done){
				dropbox.stream.createAndUploadStream('/c++',fs.createReadStream('test.png'),null,'test.png')
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('update file',function(){
			it('should upload a file and return success', function(done){
				dropbox.stream.uploadStream('/c++/testingMytestsetest.txt',fs.createReadStream('test.txt'),null,true)
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('download and upload file',function(){
			it('should retreive a stream and upload it', function(done){
				dropbox.stream.downloadStream('/c++/testingMytestsetest.txt')
				.then(function(response){
					response.mimeType.should.be.ok;
					return dropbox.stream.createAndUploadStream('/c++',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('download not existing file',function(){
			it('should throw 404 error', function(done){
				dropbox.stream.downloadStream('/c++/aasdfse.txt')
				.catch(function(error){
					error.success.should.equal(false);
					error.error_code.should.equal(404);
				}).then(done,done);
			});
		});
	});

	describe.skip('using one drive',function(){
		describe.skip('create and upload file',function(){
			it('should upload a file and return success', function(done){
				onedrive.stream.createAndUploadStream(
					'folder.e0de0102ecb2448c.E0DE0102ECB2448C!593',
					fs.createReadStream('test.png'),null,'test.png'
				)
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('update file',function(){
			it('should upload a file and return success', function(done){
				onedrive.stream.uploadStream(
					'file.e0de0102ecb2448c.E0DE0102ECB2448C!769',
					fs.createReadStream('test.txt'),null,true,false
				)
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});

		describe.skip('download and upload file',function(){
			it('should retreive a stream and upload it', function(done){
				onedrive.stream.downloadStream('file.e0de0102ecb2448c.E0DE0102ECB2448C!769')
				.then(function(response){
					response.mimeType.should.be.ok;
					return onedrive.stream.createAndUploadStream('folder.e0de0102ecb2448c.E0DE0102ECB2448C!593',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});

	describe('using google drive',function(){
		describe.skip('create and upload file',function(){
			it('should upload a file and return success', function(done){
				googledrive.stream.createAndUploadStream(
					'0B-c3nh6wFb5CWVVYTUhMM2VpMFU',
					fs.createReadStream('test.txt'),null,'test.txt'
				)
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('update file',function(){
			it('should upload a file and return success', function(done){
				googledrive.stream.uploadStream(
					'0B-c3nh6wFb5Cd3dUVGFKTXFlYU0',
					fs.createReadStream('test.txt'),null,true,false
				)
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('download and upload file',function(){
			it('should retreive a stream and upload it', function(done){
				googledrive.stream.downloadStream('0B-c3nh6wFb5Cd3dUVGFKTXFlYU0')
				.then(function(response){
					response.mimeType.should.be.ok;
					return googledrive.stream.createAndUploadStream('0B-c3nh6wFb5CWVVYTUhMM2VpMFU',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});

	describe('acrossing drive',function(){
		describe.skip('dropbox -> onedrive',function(){
			it('should success',function(done){
				dropbox.stream.downloadStream('/c++/testingMytestsetest.txt')
				.then(function(response){
					response.mimeType.should.be.ok;
					return onedrive.stream.createAndUploadStream('folder.e0de0102ecb2448c.E0DE0102ECB2448C!593',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('dropbox -> googledrive',function(){
			it('should success',function(done){
				dropbox.stream.downloadStream('/c++/testingMytestsetest.txt')
				.then(function(response){
					response.mimeType.should.be.ok;
					return googledrive.stream.createAndUploadStream('0B-c3nh6wFb5CWVVYTUhMM2VpMFU',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('onedrive -> dropbox',function(){
			it('should success',function(done){
				onedrive.stream.downloadStream('file.e0de0102ecb2448c.E0DE0102ECB2448C!769')
				.then(function(response){
					response.mimeType.should.be.ok;
					return dropbox.stream.createAndUploadStream('/c++',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('onedrive -> googledrive',function(){
			it('should success',function(done){
				onedrive.stream.downloadStream('file.e0de0102ecb2448c.E0DE0102ECB2448C!769')
				.then(function(response){
					response.mimeType.should.be.ok;
					return googledrive.stream.createAndUploadStream('0B-c3nh6wFb5CWVVYTUhMM2VpMFU',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('googledrive -> dropbox',function(){
			it('should success',function(done){
				googledrive.stream.downloadStream('0B-c3nh6wFb5Cd3dUVGFKTXFlYU0')
				.then(function(response){
					response.mimeType.should.be.ok;
					return dropbox.stream.createAndUploadStream('/c++',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
		describe.skip('googledrive -> onedrive',function(){
			it('should success',function(done){
				googledrive.stream.downloadStream('0B-c3nh6wFb5Cd3dUVGFKTXFlYU0')
				.then(function(response){
					response.mimeType.should.be.ok;
					return onedrive.stream.createAndUploadStream('folder.e0de0102ecb2448c.E0DE0102ECB2448C!593',response,response.mimetype,'testing__222.txt');
				})
				.then(function(response){
					console.log(response);
					response.success.should.equal(true);
					response.identifier.should.be.ok;
					response.name.should.be.ok;
				}).then(done,done);
			});
		});
	});
});

//	Sharing functions are pending and not ready!!
// describe.skip('Share', function() {
// 	describe('list',function(){
// 		describe('using google drive',function(){
// 			it('should give a list of permission',function(done){
// 				googledrive.share.list('id')
// 				.then(function(response){
// 					response.success.should.equal(true);
// 					response.content.should.be.array;
// 				}).then(done,done);
// 			});
// 		});
// 	});
// 	describe('get',function(){
// 		describe('using google drive',function(){
// 			it('should give details of permission',function(done){
// 				googledrive.share.list('id')
// 				.then(function(response){
// 					response.success.should.equal(true);
// 					response.type.should.be.ok;
// 					response.role.should.be.ok;
// 					if(response.type == 'user' || 'group')
// 						response.email.should.be.ok;
// 					if(response.type == 'domain')
// 						response.domain.should.be.ok;
// 					response.selflink
// 				}).then(done,done);
// 			});
// 		});
// 	});
// });

});

// beforeEach(function(done) {
//     //start mocha as
//     //mocha -t 10000 --debug
//     setTimeout(function() {
//         done();
//     }, 2000);
// });